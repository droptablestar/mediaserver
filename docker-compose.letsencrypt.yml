version: "3.7"
    
services:
  # plex
  plex:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_default
      traefik.http.routers.plex.tls.certresolver: prod
      traefik.http.routers.plex.rule: Host(`${PLEX_HOST}`)
      traefik.http.services.plex.loadbalancer.server.port: 32400
      traefik.http.services.plex.loadbalancer.server.scheme: http

  # nzbget
  nzbget:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_default
      traefik.http.routers.nzbget.tls.certresolver: prod
      traefik.http.routers.nzbget.rule: Host(`${NZBGET_HOST}`)
      traefik.http.routers.nzbget.middlewares: hsts-header, ipallowlist

  # radarr
  radarr:
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_default
      traefik.http.routers.radarr.tls.certresolver: prod
      traefik.http.routers.radarr.rule: Host(`${RADARR_HOST}`)
      traefik.http.routers.radarr.middlewares: hsts-header, basicauth
      traefik.http.routers.radarr-api.rule: Host(`${RADARR_HOST}`) && PathPrefix(`/api`)
      traefik.http.routers.radarr-api.middlewares: hsts-header
      traefik.http.services.radarr.loadbalancer.passHostHeader: true
      traefik.http.routers.radarr.middlewares: hsts-header, ipallowlist

  # portainer
  portainer:
    image: portainer/portainer-ce:2.11.0
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/portainer:/data
    labels:
      # Frontend
      traefik.enable: true
      traefik.docker.network: mediaserver_default
      traefik.http.routers.portainer.rule: Host(`${PORTAINER_HOST}`)
      traefik.http.routers.portainer.entrypoints: websecure
      traefik.http.routers.portainer.service: portainer
      traefik.http.routers.portainer.tls.certresolver: prod
      traefik.http.services.portainer.loadbalancer.server.port: 9000

  # https://hub.docker.com/_/traefik/
  traefik:
    image: traefik:v2.2.8
    restart: unless-stopped
    environment:
      - TZ=${TZ}
    networks:
      - default
    ports:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIG_DIR}/traefik:/etc/traefik:rw
      - /var/log/docker:/var/log
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accessLog.filePath=/var/log/traefik/access.log"
#      - "--accessLog.filters.statusCodes=400-499"
      - "--api=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesResolvers.prod.acme.tlschallenge=true"
      - "--certificatesresolvers.prod.acme.storage=/etc/traefik/acme.json"
      - "--certificatesresolvers.prod.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.prod.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      # - "--certificatesResolvers.staging.acme.tlschallenge=true"
      # - "--certificatesresolvers.staging.acme.storage=/etc/traefik/acme.json"
      # - "--certificatesresolvers.staging.acme.email=${ACME_EMAIL}"
      # - "--certificatesresolvers.staging.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    labels:
      traefik.enable: "true"
      traefik.docker.network: mediaserver_default
      traefik.http.routers.traefik.tls.certresolver: prod
      traefik.http.routers.traefik.rule: Host(`${TRAEFIK_HOST}`)
      traefik.http.routers.traefik.middlewares: hsts-header, basicauth
      traefik.http.routers.traefik.service: api@internal
      traefik.http.middlewares.test-auth.basicauth.users: "${BASICAUTH_USERS}"
      traefik.http.middlewares.basicauth.basicauth.usersfile: /etc/traefik/.htpasswd
      traefik.http.middlewares.ipallowlist.ipwhitelist.sourcerange: "${IPALLOWLIST}"
      traefik.http.middlewares.hsts-header.headers.customResponseHeaders.Strict-Transport-Security: "max-age=63072000"
