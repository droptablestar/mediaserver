
  # https://docs.linuxserver.io/images/docker-jellyfin
  # jellyfin:
  #   image: ghcr.io/linuxserver/jellyfin@sha256:5dc17ccc851e90953e4c519521933af51aeedc961663a8396b516a9e232c2ac7
  #   restart: unless-stopped
  #   environment:
  #     PUID: "${PUID}"
  #     PGID: "${PGID}"
  #     TZ: "${TZ}"
  #     JELLYFIN_PublishedServerUrl: "${JELLYFIN_HOST}"
  #   networks:
  #     - default
  #   volumes:
  #     - "${CONFIG_DIR}/jellyfin:/config"
  #     - "${MEDIA_DIR}:/media"



  # sonarr:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.sonarr.tls.certresolver: prod
  #     traefik.http.routers.sonarr.rule: Host(`${SONARR_HOST}`)
  #     traefik.http.routers.sonarr.middlewares: hsts-header, basicauth
  #     traefik.http.routers.sonarr-api.rule: Host(`${SONARR_HOST}`) && PathPrefix(`/api`)
  #     traefik.http.routers.sonarr-api.middlewares: hsts-header



  # nzbhydra:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.nzbhydra.tls.certresolver: prod
  #     traefik.http.routers.nzbhydra.rule: Host(`${NZBHYDRA_HOST}`)
  #     traefik.http.routers.nzbhydra.middlewares: hsts-header, basicauth
  #     traefik.http.routers.nzbhydra-api.rule: Host(`${NZBHYDRA_HOST}`) && PathPrefix(`/api`,`/getnzb`,`/gettorrent`,`/rss`,`/torznab/api`)
  #     traefik.http.routers.nzbhydra-api.middlewares: hsts-header

  # ombi:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.ombi.tls.certresolver: prod
  #     traefik.http.routers.ombi.rule: Host(`${OMBI_HOST}`)
  #     traefik.http.routers.ombi.middlewares: hsts-header, basicauth

  # duplicati:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.duplicati.tls.certresolver: prod
  #     traefik.http.routers.duplicati.rule: Host(`${DUPLICATI_HOST}`)
  #     traefik.http.routers.duplicati.middlewares: hsts-header, basicauth

  # netdata:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.netdata.tls.certresolver: prod
  #     traefik.http.routers.netdata.rule: Host(`${NETDATA_HOST}`)
  #     traefik.http.routers.netdata.middlewares: hsts-header, basicauth

  # elrond:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.netdata.tls.certresolver: prod
  #     traefik.http.routers.netdata.rule: Host(`${ELROND_HOST}`)
  #     traefik.http.routers.netdata.middlewares: hsts-header, basicauth

  # web:
  #   labels:
  #     traefik.enable: "true"
  #     traefik.docker.network: mediaserver_default
  #     traefik.http.routers.netdata.tls.certresolver: prod
  #     traefik.http.routers.netdata.rule: Host(`${WEB_HOST}`)
  #     traefik.http.routers.netdata.middlewares: hsts-header
