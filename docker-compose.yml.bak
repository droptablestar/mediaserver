# https://docs.linuxserver.io/images/docker-jellyfin
  # jellyfin:
  #   image: ghcr.io/linuxserver/jellyfin@sha256:5dc17ccc851e90953e4c519521933af51aeedc961663a8396b516a9e232c2ac7
  #   restart: unless-stopped
  #   environment:
  #     PUID: "${PUID}"
  #     PGID: "${PGID}"
  #     TZ: "${TZ}"
  #     JELLYFIN_PublishedServerUrl: "${JELLYFIN_HOST}"
  #   networks:
  #     - default
  #   volumes:
  #     - "${CONFIG_DIR}/jellyfin:/config"
  #     - "${MEDIA_DIR}:/media"

  # https://docs.linuxserver.io/images/docker-sonarr
  # sonarr:
  #   image: ghcr.io/linuxserver/sonarr@sha256:fae1b8aa45f24ea99b50e03b2fadac0dc14c3ca8b5eeb233da9c368bafd7e7a6
  #   restart: unless-stopped
  #   environment:
  #     PUID: "${PUID}"
  #     PGID: "${PGID}"
  #     TZ: "${TZ}"
  #   networks:
  #     - default
  #   volumes:
  #     - "${CONFIG_DIR}/sonarr:/config"
  #     - "${DOWNLOADS_DIR}:/downloads"
  #     - "${MEDIA_DIR}:/media"
  #   links:
  #     - nzbhydra
  #     - nzbget



  # https://docs.linuxserver.io/images/docker-nzbhydra
  # nzbhydra:
  #   image: ghcr.io/linuxserver/nzbhydra2@sha256:d5f76a7682305de717bcca672d4b54b05f0f299b71e1bcc690058d918bc1724b
  #   restart: unless-stopped
  #   environment:
  #     PUID: "${PUID}"
  #     PGID: "${PGID}"
  #     TZ: "${TZ}"
  #   networks:
  #     - default
  #   volumes:
  #     - "${CONFIG_DIR}/nzbhydra:/config"
  #     - "${DOWNLOADS_DIR}:/downloads"

  # # https://docs.linuxserver.io/images/docker-ombi
  # ombi:
  #   image: ghcr.io/linuxserver/ombi@sha256:471db51ad697f21833de90839c4be95107c838d42f732ae598df7218d6d1bffa
  #   restart: unless-stopped
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     TZ: ${TZ}
  #   volumes:
  #     - ${CONFIG_DIR}/ombi:/config
  #   networks:
  #     - default
  #   links:
  #     - sonarr
  #     - radarr
  #     - plex

  # https://docs.linuxserver.io/images/docker-duplicati
  # duplicati:
  #   image: ghcr.io/linuxserver/duplicati@sha256:3d5e914711b3bfe7e50b61602d75c7d59cc398fd1fd0d5d4020104799baffcf9
  #   restart: unless-stopped
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     TZ: ${TZ}
  #   volumes:
  #     - ${CONFIG_DIR}/duplicati:/config:rw
  #     - ./:/source:rw
  #   networks:
  #     - default

  # https://hub.docker.com/r/netdata/netdata
  # netdata:
  #   image: netdata/netdata@sha256:5588c56262569252d568ff6137b6e35031f3870f4a68b56594efe3fc94e13c34
  #   restart: unless-stopped
  #   hostname: ${NETDATA_HOST}
  #   environment:
  #     PGID: ${DOCKER_PGID}
  #     TZ: ${TZ}
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   volumes:
  #     - /etc/passwd:/host/etc/passwd:ro
  #     - /etc/group:/host/etc/group:ro
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - default

  # https://hub.docker.com/repository/registry-1.docker.io/droptablestar/mednex_vending
  # web:
  #   image: droptablestar/mednex_vending
  #   restart: unless-stopped
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     FLASK_ENV: development
  #   networks:
  #     - default
  # redis:
  #   image: "redis:alpine"
